[{"L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\index.js":"1","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\App.js":"2","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\reportWebVitals.js":"3","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\Sidebar.js":"4","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\SidebarChat.js":"5","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\Chat.js":"6","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\firebase.js":"7","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\Login.js":"8","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\StateProvider.js":"9","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\reducer.js":"10"},{"size":690,"mtime":1609863585604,"results":"11","hashOfConfig":"12"},{"size":825,"mtime":1609903750064,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1859,"mtime":1609865873421,"results":"15","hashOfConfig":"12"},{"size":1590,"mtime":1609894205777,"results":"16","hashOfConfig":"12"},{"size":3773,"mtime":1609892061800,"results":"17","hashOfConfig":"12"},{"size":727,"mtime":1609805032697,"results":"18","hashOfConfig":"12"},{"size":1043,"mtime":1609892308241,"results":"19","hashOfConfig":"12"},{"size":369,"mtime":1609862078353,"results":"20","hashOfConfig":"12"},{"size":430,"mtime":1609892790360,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"vunfw",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\index.js",[],["47","48"],"L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\App.js",["49"],"import React  from \"react\";\nimport './App.css';\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n// https://whatsapp-clone-c4088.web.app\nfunction App() {\n  const[{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n       <div className=\"app__body\">\n        <Router>\n        <Sidebar/>\n         <Switch>\n         \n           <Route path=\"/rooms/:roomId\">\n            \n             <Chat/>\n            </Route>\n\n             <Route path=\"/\">\n             <Chat/>\n             </Route>\n          </Switch>\n        </Router>\n    \n       </div>\n       )}\n    </div>\n  );\n}\n\nexport default App;\n","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\reportWebVitals.js",[],"L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\Sidebar.js",["50"],"import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport \"./Sidebar.css\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Sidebar() {\r\nconst [rooms, setRooms] = useState([]);\r\nconst [{user}, dispatch] = useStateValue();\r\n  \r\nuseEffect(() => {\r\n     const unsubscribe =  db.collection(\"rooms\").onSnapshot((snapshot) => setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n         \r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n        );\r\n        return () => {\r\n          unsubscribe();\r\n        }\r\n  }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n        <div className=\"sidebar__header\">\r\n           <Avatar src={user?.photoURL}/>\r\n          <div className=\"sidebar__headerRight\">\r\n           <IconButton><DonutLargeIcon/></IconButton>\r\n           <IconButton><ChatIcon/></IconButton>\r\n           <IconButton>  <MoreVertIcon/></IconButton>\r\n          \r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar__search\">\r\n         <div className=\"sidebar__searchContainer\">\r\n              \r\n         <SearchOutlined/>\r\n         <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n         </div>\r\n        </div>\r\n        <div className=\"sidebar__chats\">\r\n          <SidebarChat addNewChat/>\r\n           {rooms.map(room => (\r\n             <SidebarChat key={room.id} id= {room.id}\r\n             name={room.data.name} /> \r\n           ))}\r\n        </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\SidebarChat.js",[],"L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\Chat.js",["51","52","53","54"],"import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport  SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./Chat.css\"\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\n\r\nfunction Chat() {\r\n   const [input, setInput] = useState(\"\");\r\n   const [seed, setSeed] = useState(\"\")\r\n   const { roomId } = useParams();\r\n   const [roomName, setRoomName] = useState(\"\");\r\n   const [messages, setMessages] = useState([]);\r\n   const [{ user }, dispatch] = useStateValue();\r\n\r\n   useEffect(() => {\r\n      if (roomId) {\r\n        db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName\r\n        (snapshot.data().name));\r\n\r\n        db.collection(\"rooms\").doc(roomId).\r\n        collection(\"messages\").orderBy('timestamp', 'asc').onSnapshot(snapshot => (\r\n             setMessages(snapshot.docs.map(doc => doc.\r\n                data()))\r\n         ))\r\n\r\n\r\n      }\r\n   }, [roomId]);\r\n\r\n     useEffect(() => {\r\n         setSeed(Math.floor(Math.random() * 5000));\r\n\r\n     }, [roomId]);\r\n\r\n     const sendMessage = (e) => {\r\n         e.preventDefault();\r\n         console.log(\"You typed >>> \", input);\r\n\r\n         db.collection('rooms').doc(roomId).collection('messages').add({\r\n             message: input,\r\n             name: user.displayName,\r\n             timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\r\n         });\r\n\r\n         setInput(\"\");\r\n     };\r\n\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n\r\n          <div className=\"chat__header\">\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>  \r\n            \r\n            <div className=\"chat__headerInfo\">\r\n              <h3>{roomName}</h3>\r\n              <p>Last seen{\" \"}\r\n              {new Date(\r\n                  messages[messages.length - 1]?.\r\n                  timestamp?.toDate()\r\n              ).toUTCString()}</p>\r\n            </div>\r\n\r\n            <div className=\"chat__headerRight\">\r\n              <IconButton>\r\n                <SearchOutlined />\r\n              </IconButton>\r\n              <IconButton>\r\n                <AttachFileIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n\r\n            </div>\r\n\r\n          </div> \r\n          \r\n          <div className=\"chat__body\">\r\n            {messages.map((message) => (\r\n               <p className={`chat__message ${message.name === user.displayName && \"chat__reciever\"}`} >\r\n                  <span className=\"chat__name\">\r\n                    {message.name}</span>\r\n                    {message.message}\r\n                  <span className=\"chat__timestamp\">\r\n                      {new Date(message.timestamp?.toDate\r\n                        ()).toUTCString()}\r\n                   </span>\r\n              </p>\r\n               \r\n            ))}\r\n           \r\n          </div>\r\n           \r\n          <div className=\"chat__footer\">\r\n           <InsertEmoticonIcon />\r\n           <form>\r\n               <input \r\n               value={input}\r\n               onChange={(e) => setInput(e.target.value)} \r\n               placeholder=\"Type a message\" \r\n               type=\"text\"/>\r\n               <button onClick={sendMessage} \r\n               type=\"submit\">Send a message</button>\r\n           </form>\r\n           <MicIcon/>\r\n          </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat\r\n","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\firebase.js",[],"L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\Login.js",["55","56"],"import React from 'react'\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./Login.css\";\r\nimport { auth, provider } from \"./firebase\";\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from \"./StateProvider\";\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n      auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n          dispatch({\r\n              type: actionTypes.SET_USER,\r\n              user: result.user,\r\n          });\r\n      })\r\n      .catch((error) => alert(error.message));  \r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n        <div className=\"login__container\">\r\n         <img \r\n           src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c543.png\"\r\n         />\r\n         <div className=\"login__text\">\r\n           <h1>Sign in to WhatsApp</h1>\r\n         </div>\r\n\r\n         <Button  onClick={signIn}>\r\n           Sign In With Google\r\n         </Button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\StateProvider.js",[],"L:\\React\\WhatsApp Clone\\whatsapp-clone\\src\\reducer.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":10,"column":19,"nodeType":"63","messageId":"64","endLine":10,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":15,"column":16,"nodeType":"63","messageId":"64","endLine":15,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":21,"column":21,"nodeType":"63","messageId":"64","endLine":21,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":30,"column":43,"nodeType":"67","messageId":"68","endLine":30,"endColumn":44,"fix":"69"},{"ruleId":"65","severity":1,"message":"66","line":32,"column":54,"nodeType":"67","messageId":"68","endLine":32,"endColumn":55,"fix":"70"},{"ruleId":"65","severity":1,"message":"66","line":70,"column":48,"nodeType":"67","messageId":"68","endLine":70,"endColumn":50,"fix":"71"},{"ruleId":"72","severity":1,"message":"73","line":8,"column":12,"nodeType":"74","messageId":"75","endLine":8,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":25,"column":10,"nodeType":"78","endLine":27,"endColumn":12},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"81","text":"82"},{"range":"83","text":"84"},{"range":"85","text":"86"},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",[1109,1120],"\r\n        .",[1250,1269],"\r\n                .",[2189,2211],"\r\n                  ?."]